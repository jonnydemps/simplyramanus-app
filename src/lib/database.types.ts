// Generated by (or based on) Supabase type generation tools
// Includes manual corrections for the 'profiles' table

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      // --- comments Table (Reconstructed based on schema description) ---
      // --- PLEASE VERIFY against your actual schema.sql ---
      comments: {
        Row: {
          id: string
          formulation_id: string
          user_id: string // FK to profiles.id
          content: string
          created_at: string | null
          updated_at: string | null
        }
        Insert: {
          id?: string // Default uuid
          formulation_id: string
          user_id: string // Should match auth.uid() / profiles.id
          content: string
          created_at?: string | null
          updated_at?: string | null
        }
        Update: {
          id?: string
          formulation_id?: string
          user_id?: string // Usually don't update FKs
          content?: string
          created_at?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "comments_formulation_id_fkey" // CHECK ACTUAL FK NAME!
            columns: ["formulation_id"]
            isOneToOne: false
            referencedRelation: "formulations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "comments_user_id_fkey" // CHECK ACTUAL FK NAME!
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          }
        ]
      }

      // --- formulations Table (Kept as provided, added Relationships) ---
      formulations: {
        Row: {
          id: string
          created_at: string
          updated_at: string // Assuming this exists based on schema description
          name: string
          product_type: string
          user_id: string // FK referencing profiles.id
          description: string | null // Assuming this exists based on schema desc
          status: string // Assuming CHECK constraint handled elsewhere
          payment_status: string // Assuming CHECK constraint handled elsewhere
          payment_id: string | null // Added based on create/route.ts logic
          original_file_name: string | null // Based on schema desc
          file_path: string | null // Based on schema desc
          // Removed 'report_url' and 'comments' based on original schema preferring separate tables
        }
        Insert: {
          id?: string // Default uuid
          created_at?: string | null
          updated_at?: string | null
          name: string
          product_type: string
          user_id: string // FK referencing profiles.id
          description?: string | null
          status?: string // Default 'pending' in DB
          payment_status?: string // Default 'unpaid' in DB
          payment_id?: string | null
          original_file_name?: string | null
          file_path?: string | null
        }
        Update: {
          id?: string
          created_at?: string | null
          updated_at?: string | null
          name?: string
          product_type?: string
          user_id?: string // Usually don't update FK
          description?: string | null
          status?: string
          payment_status?: string
          payment_id?: string | null
          original_file_name?: string | null
          file_path?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "formulations_user_id_fkey" //